{"version":3,"sources":["constants/action-types.js","reducers/index.js","store/index.js","actions/index.js","components/FirstColumn/index.js","components/SecondColumn/index.js","components/ThirdColumn/index.js","App.js","serviceWorker.js","index.js"],"names":["NOTIFY_ADD_ITEM","RESET_STORE","RESET_ADD_BUTTON_CLICKED","ADD_KEY_VALUE","NOTIFY_DELETE_ITEM","RESET_DELETE_BUTTON_CLICKED","REMOVE_KEY_VALUE","RESET_CLEAR_BUTTON","SORT_KEYS","SORT_VALUES","initialState","data","rootReducer","state","arguments","length","undefined","action","type","Object","assign","addButtonClicked","clearButtonClicked","objectSpread","payload","deleteButtonClicked","ordered","keys","sort","forEach","key","reverse","sortValues","store","createStore","resetDeleteButtonClicked","ACTIONS","removeKeyValue","FirstColumn","previousSelect","_this","refs","e","this","style","backgroundColor","color","target","setState","getAttribute","_this2","subscribe","input","textContent","keyValue","replace","split","getState","props","resetAddButtonClicked","test","alert","addKeyValue","defineProperty","resetClearButtonClicked","i","items","id","push","react_default","a","createElement","contenteditable","class","ref","onClick","handleSelect","bind","border","React","Component","connect","dispatch","SecondColumn","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","notifyAddItem","assertThisInitialized","notifyDeleteItem","clear","exportXML","sortKeys","isKeyAsc","isValueAsc","preventDefault","resetStore","content","convert","js2xml","compact","ignoreComment","spaces","export","setAttribute","encodeURIComponent","click","ThirdColumn","keyValues","rowIndex","App","className","components_FirstColumn","components_SecondColumn","components_ThirdColumn","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dcf87301.chunk.js","sourcesContent":["export const NOTIFY_ADD_ITEM = \"NOTIFY_ADD_ITEM\";\r\nexport const RESET_STORE = \"RESET_STORE\";\r\nexport const RESET_ADD_BUTTON_CLICKED = \"RESET_ADD_BUTTON_CLICKED\";\r\nexport const ADD_KEY_VALUE = \"ADD_KEY_VALUE\";\r\nexport const NOTIFY_DELETE_ITEM = \"NOTIFY_DELETE_ITEM\";\r\nexport const RESET_DELETE_BUTTON_CLICKED = 'RESET_DELETE_BUTTON_CLICKED';\r\nexport const REMOVE_KEY_VALUE = \"REMOVE_KEY_VALUE\";\r\nexport const RESET_CLEAR_BUTTON = \"RESET_CLEAR_BUTTON\";\r\nexport const SORT_KEYS = \"SORT_KEYS\";\r\nexport const SORT_VALUES = \"SORT_VALUES\";","import { NOTIFY_ADD_ITEM, RESET_STORE, RESET_ADD_BUTTON_CLICKED, ADD_KEY_VALUE, NOTIFY_DELETE_ITEM, RESET_DELETE_BUTTON_CLICKED, REMOVE_KEY_VALUE, RESET_CLEAR_BUTTON, SORT_KEYS, SORT_VALUES } from '../constants/action-types';\r\nimport sortValues from 'sort-values';\r\n\r\nconst initialState = {\r\n    data: {}\r\n};\r\n\r\nfunction rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case NOTIFY_ADD_ITEM:\r\n            return Object.assign({}, state, {\r\n                addButtonClicked: true\r\n            })\r\n        case RESET_ADD_BUTTON_CLICKED:\r\n            return Object.assign({}, state, {\r\n                addButtonClicked: false\r\n            })\r\n        case RESET_STORE:\r\n            return Object.assign({}, initialState, {\r\n                clearButtonClicked: true\r\n            })\r\n        case RESET_CLEAR_BUTTON:\r\n            return Object.assign({}, state, {\r\n                clearButtonClicked: false\r\n            })\r\n        case ADD_KEY_VALUE:\r\n            return Object.assign({}, state, {\r\n                data: {\r\n                    ...state.data,\r\n                    ...action.payload\r\n                }\r\n            })\r\n        case NOTIFY_DELETE_ITEM:\r\n            return Object.assign({}, state, {\r\n                deleteButtonClicked: true\r\n            })\r\n        case RESET_DELETE_BUTTON_CLICKED:\r\n            return Object.assign({}, state, {\r\n                deleteButtonClicked: false\r\n            })\r\n        case REMOVE_KEY_VALUE:\r\n            delete state.data[action.payload]\r\n            return Object.assign({}, state, {\r\n                data: state.data\r\n            })\r\n        case SORT_KEYS:\r\n            let ordered = {};\r\n            if(action.payload === 'asc') {\r\n                Object.keys(state.data).sort().forEach(key => {\r\n                    ordered[key] = state.data[key]\r\n                })\r\n            } else if (action.payload === 'desc') {\r\n                Object.keys(state.data).sort().reverse().forEach(key => {\r\n                    ordered[key] = state.data[key]\r\n                })\r\n            }\r\n            return Object.assign({}, state, {\r\n                data: ordered\r\n            })\r\n        case SORT_VALUES:\r\n            if (action.payload === 'asc') {\r\n                ordered = sortValues(state.data);\r\n            } else if (action.payload === 'desc') {\r\n                ordered = sortValues(state.data, 'desc');\r\n            }         \r\n            return Object.assign({}, state, {\r\n                data: ordered\r\n            }) \r\n        default:\r\n          return state\r\n      }\r\n};\r\n\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import * as ACTIONS from \"../constants/action-types\";\r\n\r\n// export function addArticle(payload) {\r\n//     return { type: ADD_ARTICLE, payload }\r\n// }\r\n\r\nexport function notifyAddItem(payload) {\r\n    return { type: ACTIONS.NOTIFY_ADD_ITEM, payload }\r\n}\r\n\r\nexport function resetStore() {\r\n    return { type: ACTIONS.RESET_STORE }\r\n}\r\n\r\nexport function resetAddButtonClicked() {\r\n    return { type: ACTIONS.RESET_ADD_BUTTON_CLICKED }\r\n}\r\n\r\nexport function addKeyValue(payload) {\r\n    return { type: ACTIONS.ADD_KEY_VALUE, payload }\r\n}\r\n\r\nexport function notifyDeleteItem() {\r\n    return { type: ACTIONS.NOTIFY_DELETE_ITEM }\r\n}\r\n\r\nexport function resetDeleteButtonClicked() {\r\n    return { type: ACTIONS.RESET_DELETE_BUTTON_CLICKED }\r\n}\r\n\r\nexport function removeKeyValue(payload) {\r\n    return { type: ACTIONS.REMOVE_KEY_VALUE, payload }\r\n}\r\n\r\nexport function resetClearButtonClicked() {\r\n    return { type: ACTIONS.RESET_CLEAR_BUTTON }\r\n}\r\n\r\nexport function sortKeys(payload) {\r\n    return { type: ACTIONS.SORT_KEYS, payload }\r\n}\r\n\r\nexport function sortValues(payload) {\r\n    return { type: ACTIONS.SORT_VALUES, payload }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\n\r\nimport store from '../../store/index';\r\nimport { resetAddButtonClicked, addKeyValue, resetDeleteButtonClicked, removeKeyValue, resetClearButtonClicked } from '../../actions/index';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    resetAddButtonClicked: () => dispatch(resetAddButtonClicked()),\r\n    resetDeleteButtonClicked: () => dispatch(resetDeleteButtonClicked()),\r\n    addKeyValue: (payload) => dispatch(addKeyValue(payload)),\r\n    removeKeyValue: (payload) => dispatch(removeKeyValue(payload)),\r\n    resetClearButtonClicked: () => dispatch(resetClearButtonClicked())\r\n  }\r\n}\r\n\r\nclass FirstColumn extends React.Component {\r\n  state = {\r\n    previousSelect: this.refs['input-row-0'],\r\n  }\r\n\r\n  handleSelect(e) {\r\n    if (this.state.previousSelect) {\r\n      let previousSelect = this.refs[this.state.previousSelect];\r\n      previousSelect.style.backgroundColor = 'white';\r\n      previousSelect.style.color = 'black';\r\n    }\r\n    e.target.style.backgroundColor = '#1818C6';\r\n    e.target.style.color = 'white';\r\n    this.setState({\r\n      ...this.state,\r\n      previousSelect: e.target.getAttribute(\"id\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    store.subscribe(() => {\r\n      let input = this.refs[this.state.previousSelect] ? this.refs[this.state.previousSelect].textContent : '';\r\n      input = input.replace(/\\s*=/, '=').replace(/=\\s*/, '=');\r\n      let keyValue = input.split('=');\r\n\r\n      if (store.getState().addButtonClicked) {\r\n        this.props.resetAddButtonClicked();\r\n        if (/[^a-zA-Z0-9]/.test(keyValue[0]) || /[^a-zA-Z0-9]/.test(keyValue[1])) {\r\n          alert('Invalid input. Only alpha numeric characters are accepted');\r\n          return;\r\n        }\r\n        this.props.addKeyValue({ [keyValue[0]]: keyValue[1] });\r\n      } else if (store.getState().deleteButtonClicked && this.refs[this.state.previousSelect].textContent) {\r\n        this.refs[this.state.previousSelect].textContent = '';\r\n      } else if (store.getState().clearButtonClicked) {\r\n        this.props.resetClearButtonClicked();\r\n        for (var i = 0; i < 15; i++) {\r\n          this.refs['input-row-' + i].textContent = '';\r\n        }\r\n      }\r\n    })\r\n\r\n    // Populate rows\r\n    const items = [];\r\n    for (var i = 0; i < 15; i++) {\r\n      let id = 'input-row-' + i;\r\n      items.push(<tr><td contenteditable=\"true\" class=\"input-row\" id={id} ref={id}\r\n        onClick={this.handleSelect.bind(this)}></td></tr>)\r\n    }\r\n\r\n\r\n    return (\r\n      <table class=\"column1\" border=\"1\">\r\n        <tbody>\r\n          {items}\r\n        </tbody>\r\n      </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(FirstColumn);","import React from 'react';\r\nimport convert from 'xml-js';\r\nimport './styles.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { notifyAddItem, notifyDeleteItem, resetStore, sortKeys, sortValues } from '../../actions/index';\r\nimport store from '../../store/index';\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        notifyAddItem: () => dispatch(notifyAddItem()),\r\n        notifyDeleteItem: () => dispatch(notifyDeleteItem()),\r\n        resetStore: () => dispatch(resetStore()),\r\n        sortKeys: (payload) => dispatch(sortKeys(payload)),\r\n        sortValues: (payload) => dispatch(sortValues(payload))\r\n    }\r\n}\r\n\r\nclass SecondColumn extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.notifyAddItem = this.notifyAddItem.bind(this);\r\n        this.notifyDeleteItem = this.notifyDeleteItem.bind(this);\r\n        this.clear = this.clear.bind(this);\r\n        this.exportXML = this.exportXML.bind(this);\r\n        this.sortKeys = this.sortKeys.bind(this);\r\n        this.sortValues = this.sortValues.bind(this);\r\n\r\n        this.state = {\r\n            isKeyAsc: true,\r\n            isValueAsc: true\r\n        }\r\n    }\r\n\r\n    notifyAddItem(e) {\r\n        e.preventDefault();\r\n        this.props.notifyAddItem();\r\n    }\r\n\r\n    notifyDeleteItem(e) {\r\n        e.preventDefault();\r\n        this.props.notifyDeleteItem();\r\n    }\r\n\r\n    clear(e) {\r\n        e.preventDefault();\r\n        this.props.resetStore();\r\n    }\r\n\r\n    exportXML(e) {\r\n        if(!store.getState().data) {\r\n            return;\r\n        }\r\n        let content = convert.js2xml(store.getState().data, {compact: true, ignoreComment: true, spaces: 4});\r\n        this.refs.export.setAttribute('href', 'data:text/plain,' + encodeURIComponent(content));\r\n        this.refs.export.setAttribute('download', 'result.xml');\r\n        this.refs.export.click();\r\n    }\r\n\r\n    sortKeys(e) {\r\n        e.preventDefault();\r\n        if(this.state.isKeyAsc) {\r\n            this.props.sortKeys('asc');\r\n            this.setState({\r\n                isKeyAsc: false\r\n            })\r\n        } else {\r\n            this.props.sortKeys('desc');\r\n            this.setState({\r\n                isKeyAsc: true\r\n            });\r\n        }\r\n    }\r\n\r\n    sortValues(e) {\r\n        e.preventDefault();\r\n        if(this.state.isValueAsc) {\r\n            this.props.sortValues('asc');\r\n            this.setState({\r\n                isValueAsc: false\r\n            })\r\n        } else {\r\n            this.props.sortValues('desc');\r\n            this.setState({\r\n                isValueAsc: true\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button class=\"button\" onClick={this.notifyAddItem}>Add</button>\r\n                <br />\r\n                <button class=\"button\" onClick={this.notifyDeleteItem}>Remove Selected</button>\r\n                <br />\r\n                <button class=\"button\" onClick={this.clear}>Clear</button>\r\n                <br />\r\n                <button class=\"button\" onClick={this.exportXML}>Export to XML</button>\r\n                <br />\r\n                <button class=\"button\" onClick={this.sortKeys}>Sort by Name</button>\r\n                <br />\r\n                <button class=\"button\" onClick={this.sortValues}>Sort by Value</button>\r\n                <a ref='export' id='download'></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SecondColumn);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './styles.css';\r\nimport store from '../../store/index';\r\n\r\nimport { removeKeyValue, resetDeleteButtonClicked } from '../../actions/index'; \r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    removeKeyValue: (payload) => dispatch (removeKeyValue(payload)),\r\n    resetDeleteButtonClicked: () => dispatch(resetDeleteButtonClicked())\r\n  }\r\n}\r\n\r\nclass ThirdColumn extends React.Component {\r\n  state = {\r\n    previousSelect: null\r\n  }\r\n\r\n  handleSelect(e) {\r\n    if(this.state.previousSelect) {\r\n      let previousSelect = this.refs[this.state.previousSelect];\r\n      previousSelect.style.backgroundColor = 'white';\r\n      previousSelect.style.color = 'black';\r\n    }\r\n    e.target.style.backgroundColor = '#1818C6';\r\n    e.target.style.color = 'white';\r\n    this.setState({\r\n      ...this.state,\r\n      previousSelect: e.target.getAttribute(\"id\")\r\n    });\r\n  }\r\n\r\n  render() {\r\n    store.subscribe(() => {\r\n        if(store.getState().deleteButtonClicked) {\r\n          this.props.resetDeleteButtonClicked();\r\n          let key = this.refs[this.state.previousSelect] ? this.refs[this.state.previousSelect].textContent.split('=')[0] : '';\r\n          this.props.removeKeyValue(key);\r\n        }\r\n        let keyValues = store.getState().data;\r\n        let rowIndex = 0;\r\n\r\n        for(var i = 0; i < 15; i++) {\r\n          this.refs['output-row-' + i].textContent = '';\r\n        }\r\n        for (var key in keyValues) {\r\n          this.refs['output-row-' + rowIndex].textContent = key + '=' + keyValues[key];\r\n          rowIndex++;\r\n        }\r\n      })\r\n\r\n      const items = [];\r\n\r\n      for(var i = 0; i < 15; i++) {\r\n        let id = 'output-row-' + i;\r\n        items.push(<tr><td class=\"output-row\" id={id} ref={id}\r\n        onClick={this.handleSelect.bind(this)}></td></tr>)\r\n      }\r\n      \r\n      return (\r\n          <table class=\"column3\" border=\"1\">\r\n            <tbody>\r\n              {items}\r\n            </tbody>\r\n          </table>\r\n      )\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ThirdColumn);","import React, { Component } from 'react';\nimport './App.css';\n\nimport FirstColumn from './components/FirstColumn';\nimport SecondColumn from './components/SecondColumn';\nimport ThirdColumn from './components/ThirdColumn';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div class=\"row\">\n          <div class=\"column\">\n            <FirstColumn/>\n          </div>\n          <div class=\"column\">\n            <SecondColumn/>\n          </div>\n          <div class=\"column\">\n            <ThirdColumn/>\n          </div>\n        </div>       \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}